<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <link rel="icon" href="/static/favicon.ico" type="image/x-icon">
  <title>Cool Trails – Search Results</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link
    href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
    rel="stylesheet">
  <link rel="stylesheet" href="/static/styles.css">
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"/>
  <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
</head>
<body>
  <div class="home-wrapper d-flex flex-column align-items-center px-3 mt-2">

    <!-- ==== Search + Filter Form ==== -->
    <form id="searchForm" action="/search" method="get" class="mb-4">
      <div class="input-group mb-3 position-relative">
        <!-- Search input -->
        <input
          id="searchInput"
          type="search"
          name="q"
          value="{{q}}"
          class="form-control"
          placeholder="Search trails"
          aria-label="Search"
          autocomplete="off">

        <!-- Search button: clears filters first -->
        <button
          class="btn btn-outline-success"
          type="submit"
          onclick="clearFilterInputsForSearch()">
          Search
        </button>

        <!-- Opens filter panel without submitting -->
        <button
          class="btn btn-outline-secondary"
          type="button"
          onclick="openFilter()">
          Filters
        </button>

        <!-- suggestions dropdown -->
        <div id="autocomplete-list" class="list-group position-absolute w-100 mt-1"
            style="z-index:1000; max-height:200px; overflow-y:auto;">
          <!-- JS will inject: -->
          <!-- <button class="list-group-item list-group-item-action">Trail A</button> -->
        </div>
      </div>

      <!-- Always-sent fields -->
      
      <input type="hidden" name="page"    value="{{page}}">
      <input type="hidden" name="limit"   value="{{limit}}">

      <!-- Filter fields (will be removed by clearFilterInputsForSearch on Search) -->
      <input type="hidden" name="userlat" id="userlat" value="{{userlat}}">
      <input type="hidden" name="userlng" id="userlng" value="{{userlng}}">
      <input type="hidden" name="maxlen" id="maxlen"  value="{{maxlen}}">
      <input type="hidden" name="radius"  id="radius"  value="{{radius}}">

    <!-- Overlay & Sidebar -->
    <div id="overlay" class="overlay" onclick="closeFilter()"></div>
    <div id="filterSidebar" class="filter-sidebar">
      <button class="btn-close float-end" onclick="closeFilter()"></button>
      <h4 class="mt-3 mb-3">Filters</h4>

      <!-- Difficulty -->
      <div class="filter-section">
        <h5>Difficulty</h5>
        <div class="form-check-inline">
          <input class="form-check-input" type="checkbox" name="diff" id="diff-easy" value="easy" {{#ifIn "easy" ../diff }}checked{{/ifIn}}>
          <label class="form-check-label" for="diff-easy">Easy</label>
        </div>
        <div class="form-check-inline">
          <input class="form-check-input" type="checkbox" name="diff" id="diff-medium" value="medium" {{#ifIn "medium" ../diff }}checked{{/ifIn}}>
          <label class="form-check-label" for="diff-medium">Medium</label>
        </div>
        <div class="form-check-inline">
          <input class="form-check-input" type="checkbox" name="diff" id="diff-hard" value="hard" {{#ifIn "hard" ../diff }}checked{{/ifIn}}>
          <label class="form-check-label" for="diff-hard">Hard</label>
        </div>
      </div>

      <!-- Length slider -->
      <div class="filter-section mb-4">
        <h5>Max Length (mi)</h5>
        <div class="slider-label"><span>0</span><span>25+</span></div>
        <input type="range" class="form-range"
               min="0" max="25" value="5" id="lengthRange"
               oninput="handleSlider(this,'maxlen','lenOut',1609.34)">
        <div class="text-end fw-semibold">
          <span id="lenOut">5</span> mi
        </div>
      </div>

      <!-- Distance slider -->
      <div class="filter-section mb-4">
        <h5>Within Distance (mi)</h5>
        <div class="slider-label"><span>0</span><span>100</span></div>
        <input type="range" class="form-range"
               min="0" max="100" value="50" id="distanceRange"
               oninput="handleSlider(this,'radius','distOut',1609.34)">
        <div class="text-end fw-semibold">
          <span id="distOut">50</span> mi
        </div>
      </div>

      <!-- Apply & Clear -->
      <div class="d-flex justify-content-between">
        <a href="/search?q={{q}}" class="text-success">Clear</a>
        <!-- Apply sends the filters along -->
        <button class="btn btn-success" type="submit">Apply</button>
      </div>
    </div>
    </form>

    <!-- ==== Results List ==== -->
    <hr>
    <h2 class="w-100 justify-content-center">Results for “{{q}}”</h2>

    {{#if trails}}
      <div class="list-group mt-3 w-100">
        {{#each trails}}
          <a href="/trail/{{id}}?q={{../q}}"
            class="list-group-item list-group-item-action">
            <div class="d-flex align-items-start">
              <div class="flex-grow-1">
                <h5>{{name}}</h5>
                <p class="text-muted mb-1">{{length_m}} m</p>
                <span class="badge {{badge_class}}">{{difficulty}}</span>
              </div>
              <!-- mini‐map placeholder -->
              <div class="mini-map"
                  id="mini-map-{{id}}"
                  data-lat="{{center_lat}}"
                  data-lng="{{center_lng}}"
                  class="mini-map border border-secondary rounded overflow-hidden">
              </div>
            </div>
          </a>
        {{/each}}
      </div>
    {{else}}
      <p class="justify-content-center d-flex flex-column text-muted mt-3 ">No trails found.</p>
    {{/if}}

    <!-- Pagination -->
    <nav aria-label="Search results pages" class="mt-4">
      <ul class="pagination justify-content-center">
        {{#if has_prev}}
          <li class="page-item">
            <a class="page-link"
              href="/search?q={{q}}&page={{prev_page}}&limit={{limit}}{{#each diff}}&diff={{this}}{{/each}}"
              aria-label="Previous">
              « Previous
            </a>
          </li>
        {{else}}
          <li class="page-item disabled">
            <span class="page-link">« Previous</span>
          </li>
        {{/if}}
        <li class="page-item disabled">
          <span class="page-link">Page {{page}}</span>
        </li>
        {{#if has_next}}
          <li class="page-item">
            <a class="page-link"
              href="/search?q={{q}}&page={{next_page}}&limit={{limit}}{{#each diff}}&diff={{this}}{{/each}}"
              aria-label="Next">
              Next »
            </a>
          </li>
        {{else}}
          <li class="page-item disabled">
            <span class="page-link">Next »</span>
          </li>
        {{/if}}
      </ul>
    </nav>
  </div>

  <!-- JS Helpers -->
  <script>
    function openFilter() {
      overlay.classList.add('show');
      filterSidebar.classList.add('open');
    }
    function closeFilter() {
      overlay.classList.remove('show');
      filterSidebar.classList.remove('open');
    }
    function handleSlider(el, hid, out, mul) {
      document.getElementById(hid).value      = Math.round(el.value * mul);
      document.getElementById(out).textContent = el.value;
    }
    function clearFilterInputsForSearch() {
      // uncheck any diff checkboxes
      document.querySelectorAll(
        '#filterSidebar input[name="diff"]'
      ).forEach(cb => cb.checked = false);

      // remove slider names so they’re not sent on plain Search
      document.getElementById('maxlen').removeAttribute('name');
      document.getElementById('radius').removeAttribute('name');
      document.getElementById('userlat').removeAttribute('name');
      document.getElementById('userlng').removeAttribute('name');

    }

    window.addEventListener('DOMContentLoaded', () => {
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(
          p => {
            userlat.value = p.coords.latitude.toFixed(6);
            userlng.value = p.coords.longitude.toFixed(6);
          },
          ()=>{}, {enableHighAccuracy:true,timeout:8000}
        );
      }
    });
  </script>

  <script>
  ;(function(){
    const input = document.getElementById('searchInput');
    const list  = document.getElementById('autocomplete-list');
    let debounce;

    input.addEventListener('input', () => {
      clearTimeout(debounce);

      const q = input.value.trim();
      // if box is empty, clear and bail
      if (!q) {
        list.innerHTML = '';
        return;
      }

      debounce = setTimeout(async () => {
        try {
          const res = await fetch(`/suggest?q=${encodeURIComponent(q)}`);
          if (!res.ok) return;
          const suggestions = await res.json();

          // rebuild the list (this *always* runs on every input, incl. deletes)
          list.innerHTML = suggestions.map(item =>
            `<button type="button"
                    class="list-group-item list-group-item-action">
              ${item.trim()}
            </button>`
          ).join('');

          // wire up the click handler freshly each time
          list.querySelectorAll('button').forEach(btn => {
            btn.addEventListener('click', () => {
              const val = btn.textContent.trim();
              input.value = val;
              list.innerHTML = '';
              // submit immediately
              input.form.submit();
            });
          });
        } catch (e) {
          console.warn('Autocomplete error', e);
        }
      }, 300);
    });

    // clicking outside closes the list, too
    document.addEventListener('click', e => {
      if (!input.contains(e.target) && !list.contains(e.target)) {
        list.innerHTML = '';
      }
    });
  })();
  </script>

  <script
    src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js">
  </script>
  <script>
    document.addEventListener('DOMContentLoaded', ()=>{
      document.querySelectorAll('.mini-map').forEach(el=>{
        const lat = parseFloat(el.dataset.lat),
              lng = parseFloat(el.dataset.lng);
        // create map
        const map = L.map(el, {
          attributionControl: false,
          zoomControl: false,
          dragging: false,
          scrollWheelZoom: false,
          doubleClickZoom: false,
          boxZoom: false,
          keyboard: false,
        }).setView([lat, lng], 11);
        // add tile layer
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
          maxZoom: 18
        }).addTo(map);
        // marker in the center
        L.marker([lat,lng]).addTo(map);
        // disable interactive cursors
        map.getContainer().style.cursor = 'default';
      });
    });
  </script>
</body>
</html>
