<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Cool Trails - Trail Details</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <!-- Leaflet CSS -->
  <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
  <link rel="stylesheet" href="/static/styles.css">
  <style>
    #map {
      height: 400px;
    }
  </style>
</head>
<body>
  <div class="container mt-4">
    <h1>{{trail.name}}</h1>
    <p>{{trail.description}}</p>
    <p><strong>Location:</strong> {{trail.location}}</p>
    
    <!-- Map container -->
    <div id="map"></div>

    <!-- Start trail button -->
    <button class="btn btn-success mt-3">Start Trail</button>
    <a href="/search" class="btn btn-secondary mt-3">Back to Search</a>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <!-- Leaflet JS -->
  <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
  <script>
   console.log("TESSSTING")
    // Use the computed centroid if available; otherwise, fallback to a default value.
    var centerLat = {{#if center}}{{center.lat}}{{else}}0{{/if}};
    var centerLng = {{#if center}}{{center.lng}}{{else}}0{{/if}};
    console.log(centerLat, centerLng)
    // Initialize the map at the computed centroid
    var map = L.map('map').setView([centerLat, centerLng], 13);

    // Add an OpenStreetMap tile layer
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      attribution: 'Â© OpenStreetMap contributors'
    }).addTo(map);

    // If a valid polygon exists, parse it and add to the map.
    // {{trail.polygon}} is rendered as a raw JSON string.
    var trailPolygon = {{{trail.polygon}}};
    L.geoJSON(trailPolygon, {
      style: {
        color: 'blue',
        weight: 4,
        opacity: 0.1
      }
    }).addTo(map);

    // (Optional) Add a translucent gray overlay layer for shadow effect.
    L.geoJSON(trailPolygon, {
      style: {
        color: 'gray',
        fillColor: 'gray',
        fillOpacity: 0.3,
        weight: 0
      }
    }).addTo(map);
  </script>
</body>
</html>
